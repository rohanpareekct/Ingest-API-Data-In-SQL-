{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rohan-adf-factory"
		},
		"LS_BlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BlobStorage'"
		},
		"LS_SQLDB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQLDB'"
		},
		"LS_ComprehendDatabricksNotebook_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LS_ComprehendDatabricksNotebook'"
		},
		"LS_DynamicRestAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseUrl\n}"
		},
		"LS_SQLDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "rohan-sqlserver123.database.windows.net"
		},
		"LS_SQLDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADFDatabase"
		},
		"LS_SQLDB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"LS_ComprehendDatabricksNotebook_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0801-104608-el1rhggr"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DynamicRestAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseUrl": {
						"type": "string",
						"defaultValue": "@{pipeline().parameters.baseUrl}"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_DynamicRestAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQLDB_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQLDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQLDB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQLDB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ComprehendDatabricksNotebook')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4203159795451337.17.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_ComprehendDatabricksNotebook_accessToken')]"
					},
					"existingClusterId": "[parameters('LS_ComprehendDatabricksNotebook_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallFlattenFunction",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://fn-flatten-json.azurewebsites.net/api/HttpTrigger1"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "CallFlattenFunction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('CallFlattenFunction').output.apiResponses",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_InsertApiData]",
										"storedProcedureParameters": {
											"apiName": {
												"value": {
													"value": "@item().apiName",
													"type": "Expression"
												},
												"type": "String"
											},
											"jsonData": {
												"value": {
													"value": "@string(item().data)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQLDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T13:28:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ApiListJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "api_list.json",
						"folderPath": "api-json-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ApiOutput_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"apiName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().apiName",
							"type": "Expression"
						},
						"container": "api-json-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FlattenedJson_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('temp_', pipeline().RunId, '.json')",
							"type": "Expression"
						},
						"container": "api-json-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Input_REST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DynamicRestAPI",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseUrl": {
							"value": "@dataset().baseUrl\n",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"baseUrl": {
						"type": "string"
					},
					"relativeUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeUrl",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DynamicRestAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Output_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"apiName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().apiName",
							"type": "Expression"
						},
						"container": "api-json-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_APIRespTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlTableDynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobDynamicCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DynamicFiles",
						"container": "api-json-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderId",
						"type": "String"
					},
					{
						"name": "userId",
						"type": "String"
					},
					{
						"name": "isOrderConfirmed",
						"type": "String"
					},
					{
						"name": "isDispathced",
						"type": "String"
					},
					{
						"name": "isReturned",
						"type": "String"
					},
					{
						"name": "orderPlacementSource",
						"type": "String"
					},
					{
						"name": "orderValueBeforeDiscount",
						"type": "String"
					},
					{
						"name": "orderValueAfterDiscount",
						"type": "String"
					},
					{
						"name": "orderReturnedTimestamp",
						"type": "String"
					},
					{
						"name": "orderCreatedTimestamp",
						"type": "String"
					},
					{
						"name": "createdTimestamp",
						"type": "String"
					},
					{
						"name": "modifiedTimestamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FetchApiToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetApiList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ApiListJson",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_ApiLoop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetApiList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetApiList').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "WriteToBlob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetApiResponseFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Input_REST",
											"type": "DatasetReference",
											"parameters": {
												"baseUrl": "@item().baseUrl",
												"relativeUrl": "@item().relativeUrl"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Output_JSON",
											"type": "DatasetReference",
											"parameters": {
												"apiName": {
													"value": "@variables('api_response_file_name')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SetApiResponseFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "api_response_file_name",
										"value": {
											"value": "@concat(item().apiName, '_', utcNow(), '.json')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WriteToSqlServer",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WriteToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Output_JSON",
											"type": "DatasetReference",
											"parameters": {
												"apiName": {
													"value": "@variables('api_response_file_name')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SQL_APIRespTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().apiName\n",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_ApiLoop",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/json"
							},
							"url": {
								"value": "https://prod-04.centralindia.logic.azure.com:443/workflows/f9ab4e979cfd40479acc0daa4613bc49/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=xZLeSUD4p9ziJ3qwGSvK61QQqIKKs87w-MdayAngh5Y",
								"type": "Expression"
							},
							"body": "{\"pipelineName\":\"@pipeline().Pipeline\",\"runId\":\"@pipeline().RunId\""
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"baseUrl": {
						"type": "string"
					},
					"relativeUrl": {
						"type": "string"
					},
					"apiName": {
						"type": "string"
					}
				},
				"variables": {
					"api_response_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T06:08:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ApiListJson')]",
				"[concat(variables('factoryId'), '/datasets/DS_Input_REST')]",
				"[concat(variables('factoryId'), '/datasets/DS_Output_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_APIRespTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FetchApiToBlob_FlattenJsonByAzureFunction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetApiList",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ApiListJson",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_ApiLoop",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "GetApiList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetApiList').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "SetApiResponseFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "api_response_file_name",
										"value": {
											"value": "@concat(item().apiName, '_', utcNow(), '.json')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "CallFlattenFunction",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "SetApiResponseFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Content-Type": "application/json"
										},
										"url": "https://fn-flatten-json.azurewebsites.net/api/HttpTrigger1"
									}
								},
								{
									"name": "ProcessApiResponse",
									"type": "ForEach",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "CallFlattenFunction",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('CallFlattenFunction').output.apiResponses",
											"type": "Expression"
										},
										"isSequential": true,
										"activities": [
											{
												"name": "WriteTempJson",
												"type": "Copy",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [],
												"policy": {
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false,
													"parallelCopies": 4
												},
												"inputs": [
													{
														"referenceName": "DS_FlattenedJson_Source",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Output_JSON",
														"type": "DatasetReference",
														"parameters": {
															"apiName": "@variables('api_response_file_name')"
														}
													}
												]
											},
											{
												"name": "WriteToSqlServer",
												"type": "Copy",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "WriteTempJson",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate"
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_Output_JSON",
														"type": "DatasetReference",
														"parameters": {
															"apiName": "@variables('api_response_file_name')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_APIRespTable",
														"type": "DatasetReference",
														"parameters": {
															"TableName": "@concat('stg_', item().apiName)"
														}
													}
												]
											},
											{
												"name": "CleanupTempFile",
												"type": "Delete",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "WriteToSqlServer",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 1,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_FlattenedJson_Source",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"deleteFilesAfterCompletion": true
													}
												}
											},
											{
												"name": "SendSuccessNotification",
												"type": "WebActivity",
												"state": "Inactive",
												"onInactiveMarkAs": "Succeeded",
												"dependsOn": [
													{
														"activity": "CleanupTempFile",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 1,
													"retryIntervalInSeconds": 60,
													"secureOutput": true,
													"secureInput": true
												},
												"userProperties": [],
												"typeProperties": {
													"method": "POST",
													"headers": {},
													"url": "https://prod-04.centralindia.logic.azure.com:443/workflows/f9ab4e979cfd40479acc0daa4613bc49/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=xZLeSUD4p9ziJ3qwGSvK61QQqIKKs87w-MdayAngh5Y",
													"body": {
														"apiName": "@item().apiName",
														"status": "Success",
														"fileName": "@variables('api_response_file_name')",
														"recordsProcessed": "@length(item().data)"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"api_response_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T13:28:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ApiListJson')]",
				"[concat(variables('factoryId'), '/datasets/DS_FlattenedJson_Source')]",
				"[concat(variables('factoryId'), '/datasets/DS_Output_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_APIRespTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PySparkIntegrationComprehendDataFromAdlsToSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ComprehendNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEachTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/TransformCsvToParquet",
							"baseParameters": {
								"input_path": "dbfs:/mnt/blob/raw/",
								"output_path": "dbfs:/mnt/blob/processed/",
								"table_names": "table1,table2,table3"
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ComprehendDatabricksNotebook",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetListofTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA,TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'dbo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_APIRespTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "[[dbo].[jokes]",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetListofTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetListofTables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyTabletoBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlTableDynamic",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BlobDynamicCsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ComprehendDatabricksNotebook')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_APIRespTable')]",
				"[concat(variables('factoryId'), '/datasets/SqlTableDynamic')]",
				"[concat(variables('factoryId'), '/datasets/BlobDynamicCsv')]"
			]
		}
	]
}