{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Listoftable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_DynamicTableName",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "ListOfTables"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Listoftable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Listoftable').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "LastWatermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * \nfrom watermarktable\nwhere TableName='@{item().TableName}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_FileNewWatermarkTable",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "NewwaterMark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT MAX(@{item().WatermarkColumn}) AS NewWaterMarkValue FROM @{item().TableName}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_DynamicTableName",
									"type": "DatasetReference",
									"parameters": {
										"tableName": "@{item().TableName}"
									}
								}
							}
						},
						{
							"name": "SQLtoBlob",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "LastWatermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "NewwaterMark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select \n    * \nfrom \n    @{item().TableName}\nwhere \n    @{item().watermarkcolumn}>'@{activity('LastWatermark').output.firstRow.WatermarkValue}' \nand @{item().watermarkcolumn}<='@{activity('NewwaterMark').output.firstRow.NewWaterMarkValue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"blockSizeInMB": 4
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_DynamicTableName",
									"type": "DatasetReference",
									"parameters": {
										"tableName": "@item().TableName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DynamicCsvAsTableName",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": "@item().TableName",
										"FileName": "@concat('Increment load-',formatDateTime(utcNow(),'yyyy-MM-dd_HHmmss'))"
									}
								}
							]
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SQLtoBlob",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_watermarkvalue]",
								"storedProcedureParameters": {
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"LastModifiedtime": {
										"value": "@activity('NewwaterMark').output.firstRow.NewWaterMarkValue",
										"type": "Datetime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Fail1",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Pipeline Failed",
					"errorCode": "400"
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Fail1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-22.centralindia.logic.azure.com:443/workflows/c5aa99f8d97944068c12ca1bbdd6c544/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=qDN2D_drB5FEo2nQcPYf3zalWM37lSa6Wie1movuSAU",
					"body": {
						"message": "@{activity('Fail1').output.message}",
						"errorCode": "@{activity('Fail1').output.errorCode}"
					}
				}
			}
		],
		"annotations": []
	}
}